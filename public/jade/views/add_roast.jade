<!-- add roast -->
//- .new-roast
//- div(layout="row")
	div(flex)
		form(name="form" novalidate)
			div
				p
					input(type="text"
						name="bean"
						placeholder="Roast Title"
						ng-model="newRoast.bean")

				p 
					input(type="text"
						name="bean"
						placeholder="Processing Method"
						ng-model="newRoast.processing")

				p
					input(ui-date
						ui-date-format="DD, d MM, yy"
						ng-model="newRoast.roast_date"
						placeholder="Date")
				
				p
					input(type="text"
						name="roaster_program"
						placeholder="Roaster Program"
						ng-model="newRoast.roaster_program")

				p Roaster Warm:
					input(type="checkbox"
						name="roaster_warm"
						value="warm"
						ng-model="newRoast.roaster_warm")

				p Drop:
					input(type="text"
						name="temp_at_drop"
						placeholder="temp"
						ng-model="newRoast.temp_at_drop")

				p Bottom Out:
					input(type="text"
						size="8"
						name="time_at_drop"
						ng-model="newRoast.time_at_drop")
					
					input(type="text"
						name="temp_at_drop"
						placeholder="temp"
						ng-model="newRoast.temp_at_drop")

				p Yellow:
					input(type="text"
						size="8"
						name="time_to_yellow"
						ng-model="newRoast.time_to_yellow")
					
					input(type="text"
						name="temp_at_yellow"
						placeholder="temp"
						ng-model="newRoast.temp_at_yellow")

				p Brown:
					input(type="text"
						size="8"
						name="time_to_brown"
						ng-model="newRoast.time_to_brown")
					
					input(type="text"
						name="temp_at_brown"
						placeholder="temp"
						ng-model="newRoast.temp_at_brown")

				p 1st Crack Begin:
					input(type="text"
						size="8"
						name="time_to_first_crack_start"
						ng-model="newRoast.time_to_first_crack_start")
					
					input(type="text"
						name="temp_at_first_crack_start"
						placeholder="temp"
						ng-model="newRoast.temp_at_first_crack_start")

				p 1st Crack End:
					input(type="text"
						size="8"
						name="time_to_first_crack_end"
						ng-model="newRoast.time_to_first_crack_end")
					
					input(type="text"
						name="temp_at_first_crack_end"
						placeholder="temp"
						ng-model="newRoast.temp_at_first_crack_end")

				p 2nd Crack Begin:
					input(type="text"
						size="8"
						name="time_to_second_crack_start"
						ng-model="newRoast.time_to_second_crack_start")
					
					input(type="text"
						name="temp_at_second_crack_start"
						placeholder="temp"
						ng-model="newRoast.temp_at_second_crack_start")

				p 2nd Crack End:
					input(type="text"
						size="8"
						name="time_to_second_crack_end"
						ng-model="newRoast.time_to_second_crack_end")
					
					input(type="text"
						name="temp_at_second_crack_end"
						placeholder="temp"
						ng-model="newRoast.temp_at_second_crack_end")

				p End:
					input(type="text"
						size="8"
						name="time_to_second_crack_end"
						ng-model="newRoast.time_to_second_crack_end")
					
					input(type="text"
						name="temp_at_second_crack_end"
						placeholder="temp"
						ng-model="newRoast.temp_at_second_crack_end")
				
				p
					textarea(rows="4"
						cols="50"
						name="roast_notes"
						placeholder="Roast Notes"
						ng-model="newRoast.roast_notes")

				p
					textarea(rows="4"
						cols="50"
						name="taste_notes"
						placeholder="Taste Notes"
						ng-model="newRoast.taste_notes")

				#temp_curve_inputs
				ul
					li(input type="text" size="2" name="0" placeholder="0" ng-model="newRoast.temp_curve[0]")
					li(input type="text" size="2" name="1" placeholder="1" ng-model="newRoast.temp_curve[1]")
					li(input type="text" size="2" name="2" placeholder="2" ng-model="newRoast.temp_curve[2]")
					li(input type="text" size="2" name="3" placeholder="3" ng-model="newRoast.temp_curve[3]")
					li(input type="text" size="2" name="4" placeholder="4" ng-model="newRoast.temp_curve[4]")
					li(input type="text" size="2" name="5" placeholder="5" ng-model="newRoast.temp_curve[5]")
					li(input type="text" size="2" name="6" placeholder="6" ng-model="newRoast.temp_curve[6]")

				div(ng-controller="dfUpload")
					input(type="file"
						ng-model='files'
						ng-file-select="onFileSelect($files)")

				p
					input(ui-date
						ui-date-format="DD, d MM, yy"
						ng-model="newRoast.photo_date"
						placeholder="Date photo taken")

			<!-- addRoast() ADDS THE NEW ROAST -->
			//
				p
					button(ng-click="test()">test</button)
			p
				button(type="submit" ng-click="addRoast()") ADD ROAST


div(ng-controller="addRoastCtrl"
	layout="column"
	ng-cloak
	class="md-inline-form"
	flex="80"
	flex-offset="10")
	md-content(layout-padding)
		form(name="newRoastForm")
			div(layout layout-sm="column")
				md-input-container(flex)
					label Roast Title
					input(ng-model="newRoast.title")
				md-input-container(flex)
					label Roaster Program
					input(ng-model="newRoast.roaster_program")
				md-checkbox(ng-model="newRoast.roaster_warm") Preheated: {{newRoast.roaster_warm}}
				md-datepicker(ng-model="newRoast.roastDate" md-placeholder="Roast Date")
			div(layout layout-sm="column")
				md-input-container(flex)
					label Bean Origin
					input(ng-model="newRoast.bean_origin")
				md-input-container(flex)
					label Bean Processing Style
					input(ng-model="newRoast.bean_processing")
				md-datepicker(ng-model="newRoast.beans_received" md-placeholder="Beans Received")
			div(layout layout-sm="column")
				div(flex) Time
				md-input-container(flex)
					label Bottom
					input(ng-model="newRoast.time.bottom")
				md-input-container(flex)
					label Yellow
					input(ng-model="newRoast.time.yellow")

			md-button(class="md-raised md-primary" ng-click="addRoast()") Submit
//- <md-content layout-padding>
//-   <form name="userForm">
//-     <div layout layout-sm="column">
//-       <md-input-container flex>
//-         <label>Company (Disabled)</label>
//-         <input ng-model="user.company" disabled>
//-       </md-input-container>
//-       <md-datepicker ng-model="user.submissionDate" md-placeholder="Enter date"></md-datepicker>
//-     </div>
//-     <div layout layout-sm="column">
//-       <md-input-container flex>
//-         <label>First name</label>
//-         <input ng-model="user.firstName">
//-       </md-input-container>
//-       <md-input-container flex>
//-         <label>Last Name</label>
//-         <input ng-model="theMax">
//-       </md-input-container>
//-     </div>
//-     <md-input-container class="md-block">
//-       <label>Address</label>
//-       <input ng-model="user.address">
//-     </md-input-container>
//-     <md-input-container md-no-float class="md-block">
//-       <input ng-model="user.address2" placeholder="Address 2">
//-     </md-input-container>
//-     <div layout layout-sm="column">
//-       <md-input-container flex>
//-         <label>City</label>
//-         <input ng-model="user.city">
//-       </md-input-container>
//-       <md-input-container flex>
//-         <label>State</label>
//-         <md-select ng-model="user.state">
//-           <md-option ng-repeat="state in states" value="{{state.abbrev}}">
//-             {{state.abbrev}}
//-           </md-option>
//-         </md-select>
//-       </md-input-container>
//-       <md-input-container flex>
//-         <label>Postal Code</label>
//-         <input name="postalCode" ng-model="user.postalCode" placeholder="12345"
//-                required ng-pattern="/^[0-9]{5}$/" md-maxlength="5">
//-         <div ng-messages="userForm.postalCode.$error" role="alert" multiple>
//-           <div ng-message="required" class="my-message">You must supply a postal code.</div>
//-           <div ng-message="pattern" class="my-message">That doesn't look like a valid postal
//-             code.
//-           </div>
//-           <div ng-message="md-maxlength" class="my-message">
//-             Don't use the long version silly...we don't need to be that specific...
//-           </div>
//-         </div>
//-       </md-input-container>
//-     </div>
//-     <md-input-container class="md-block">
//-       <label>Biography</label>
//-       <textarea ng-model="user.biography" columns="1" md-maxlength="150" rows="5"></textarea>
//-     </md-input-container>
//-   </form>
//- </md-content>